// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Registrant.DB;

namespace Registrant.Migrations
{
    [DbContext(typeof(RegistrantCoreContext))]
    [Migration("20230417053317_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Registrant.DB.Contragent", b =>
                {
                    b.Property<int>("IdContragent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idContragent")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Active")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ServiceInfo")
                        .HasColumnType("text");

                    b.HasKey("IdContragent");

                    b.ToTable("Contragents");
                });

            modelBuilder.Entity("Registrant.DB.Driver", b =>
                {
                    b.Property<int>("IdDriver")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDriver")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Active")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Attorney")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Auto")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AutoNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Family")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("IdContragent")
                        .HasColumnType("int")
                        .HasColumnName("idContragent");

                    b.Property<string>("Info")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Passport")
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Phone")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ServiceInfo")
                        .HasColumnType("text");

                    b.HasKey("IdDriver");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("Registrant.DB.Engine", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("ActualAppVer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActualBdVer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Engine");
                });

            modelBuilder.Entity("Registrant.DB.Shipment", b =>
                {
                    b.Property<int>("IdShipment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idShipment")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Active")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength(true);

                    b.Property<string>("CountPodons")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("IdContragent")
                        .HasColumnType("int")
                        .HasColumnName("idContragent");

                    b.Property<int?>("IdDriver")
                        .HasColumnType("int")
                        .HasColumnName("idDriver");

                    b.Property<int>("IdTime")
                        .HasColumnType("int")
                        .HasColumnName("idTime");

                    b.Property<string>("Nomenclature")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NumRealese")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PacketDocuments")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ServiceInfo")
                        .HasColumnType("text");

                    b.Property<string>("Size")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("StoreKeeper")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TochkaLoad")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TypeLoad")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IdShipment");

                    b.HasIndex("IdContragent");

                    b.HasIndex("IdDriver");

                    b.HasIndex("IdTime");

                    b.ToTable("Shipment");
                });

            modelBuilder.Entity("Registrant.DB.Time", b =>
                {
                    b.Property<int>("IdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTime")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateTimeArrive")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateTimeEndLoad")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateTimeFactRegist")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateTimeLeft")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateTimeLoad")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateTimePlanRegist")
                        .HasColumnType("datetime");

                    b.HasKey("IdTime");

                    b.ToTable("Time");
                });

            modelBuilder.Entity("Registrant.DB.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUser")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LevelAccess")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Registrant.DB.Shipment", b =>
                {
                    b.HasOne("Registrant.DB.Contragent", "IdContragentNavigation")
                        .WithMany("Shipments")
                        .HasForeignKey("IdContragent")
                        .HasConstraintName("FK_Shipment_Contragents");

                    b.HasOne("Registrant.DB.Driver", "IdDriverNavigation")
                        .WithMany("Shipments")
                        .HasForeignKey("IdDriver")
                        .HasConstraintName("FK_Shipment_Drivers");

                    b.HasOne("Registrant.DB.Time", "IdTimeNavigation")
                        .WithMany("Shipments")
                        .HasForeignKey("IdTime")
                        .HasConstraintName("FK_Shipment_Time")
                        .IsRequired();

                    b.Navigation("IdContragentNavigation");

                    b.Navigation("IdDriverNavigation");

                    b.Navigation("IdTimeNavigation");
                });

            modelBuilder.Entity("Registrant.DB.Contragent", b =>
                {
                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("Registrant.DB.Driver", b =>
                {
                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("Registrant.DB.Time", b =>
                {
                    b.Navigation("Shipments");
                });
#pragma warning restore 612, 618
        }
    }
}
